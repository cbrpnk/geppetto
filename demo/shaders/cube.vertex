uniform vec3 pos;

vec3 lightPos = vec3(0.0, 100.0, 0.0);
vec3 lightColor = vec3(1.0, 1.0, 1.0);
vec3 color = vec3(1.0, 0.0, 0.0);

void main(void)
{
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    
    vec3 unitNormal = normalize(gl_NormalMatrix * gl_Normal);
    vec3 unitLightDirection = normalize(lightPos - gl_Position.xyz);
    vec3 diffuse = max(dot(unitNormal, unitLightDirection), 0.3) * color * lightColor;
    
    vec3 specular = pow(max(dot(unitNormal, vec3(0.0, 0.0, 1.0)), 0.0), 123) * color * lightColor;
    vec3 finalColor = diffuse + specular;
    
    gl_FrontColor = vec4(finalColor.r, finalColor.g, finalColor.b, 1.0);
}
